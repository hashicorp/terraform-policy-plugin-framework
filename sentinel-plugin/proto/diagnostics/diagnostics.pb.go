// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.6
// source: diagnostics/diagnostics.proto

package diagnostics

import (
	types "github.com/hashicorp/go-s2-plugin/sentinel-plugin/proto/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_INVALID Severity = 0
	Severity_WARNING Severity = 1
	Severity_ERROR   Severity = 2
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INVALID",
		1: "WARNING",
		2: "ERROR",
	}
	Severity_value = map[string]int32{
		"INVALID": 0,
		"WARNING": 1,
		"ERROR":   2,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_diagnostics_diagnostics_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_diagnostics_diagnostics_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_diagnostics_diagnostics_proto_rawDescGZIP(), []int{0}
}

type Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=diagnostics.Severity" json:"severity,omitempty"`
	Summary  string   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Detail   string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	// only result should be set, depending on the type of diagnostic
	//
	// Types that are assignable to Result:
	//
	//	*Diagnostic_EvaluateResult
	//	*Diagnostic_FetchResult
	Result isDiagnostic_Result `protobuf_oneof:"result"`
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diagnostics_diagnostics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_diagnostics_diagnostics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_diagnostics_diagnostics_proto_rawDescGZIP(), []int{0}
}

func (x *Diagnostic) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INVALID
}

func (x *Diagnostic) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Diagnostic) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (m *Diagnostic) GetResult() isDiagnostic_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *Diagnostic) GetEvaluateResult() types.EvaluateResult {
	if x, ok := x.GetResult().(*Diagnostic_EvaluateResult); ok {
		return x.EvaluateResult
	}
	return types.EvaluateResult(0)
}

func (x *Diagnostic) GetFetchResult() types.FetchResult {
	if x, ok := x.GetResult().(*Diagnostic_FetchResult); ok {
		return x.FetchResult
	}
	return types.FetchResult(0)
}

type isDiagnostic_Result interface {
	isDiagnostic_Result()
}

type Diagnostic_EvaluateResult struct {
	EvaluateResult types.EvaluateResult `protobuf:"varint,4,opt,name=evaluate_result,json=evaluateResult,proto3,enum=types.EvaluateResult,oneof"`
}

type Diagnostic_FetchResult struct {
	FetchResult types.FetchResult `protobuf:"varint,5,opt,name=fetch_result,json=fetchResult,proto3,enum=types.FetchResult,oneof"`
}

func (*Diagnostic_EvaluateResult) isDiagnostic_Result() {}

func (*Diagnostic_FetchResult) isDiagnostic_Result() {}

var File_diagnostics_diagnostics_proto protoreflect.FileDescriptor

var file_diagnostics_diagnostics_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x11, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf6, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x31,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x2f, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x32, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_diagnostics_diagnostics_proto_rawDescOnce sync.Once
	file_diagnostics_diagnostics_proto_rawDescData = file_diagnostics_diagnostics_proto_rawDesc
)

func file_diagnostics_diagnostics_proto_rawDescGZIP() []byte {
	file_diagnostics_diagnostics_proto_rawDescOnce.Do(func() {
		file_diagnostics_diagnostics_proto_rawDescData = protoimpl.X.CompressGZIP(file_diagnostics_diagnostics_proto_rawDescData)
	})
	return file_diagnostics_diagnostics_proto_rawDescData
}

var file_diagnostics_diagnostics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_diagnostics_diagnostics_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_diagnostics_diagnostics_proto_goTypes = []interface{}{
	(Severity)(0),             // 0: diagnostics.Severity
	(*Diagnostic)(nil),        // 1: diagnostics.Diagnostic
	(types.EvaluateResult)(0), // 2: types.EvaluateResult
	(types.FetchResult)(0),    // 3: types.FetchResult
}
var file_diagnostics_diagnostics_proto_depIdxs = []int32{
	0, // 0: diagnostics.Diagnostic.severity:type_name -> diagnostics.Severity
	2, // 1: diagnostics.Diagnostic.evaluate_result:type_name -> types.EvaluateResult
	3, // 2: diagnostics.Diagnostic.fetch_result:type_name -> types.FetchResult
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_diagnostics_diagnostics_proto_init() }
func file_diagnostics_diagnostics_proto_init() {
	if File_diagnostics_diagnostics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_diagnostics_diagnostics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_diagnostics_diagnostics_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Diagnostic_EvaluateResult)(nil),
		(*Diagnostic_FetchResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_diagnostics_diagnostics_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_diagnostics_diagnostics_proto_goTypes,
		DependencyIndexes: file_diagnostics_diagnostics_proto_depIdxs,
		EnumInfos:         file_diagnostics_diagnostics_proto_enumTypes,
		MessageInfos:      file_diagnostics_diagnostics_proto_msgTypes,
	}.Build()
	File_diagnostics_diagnostics_proto = out.File
	file_diagnostics_diagnostics_proto_rawDesc = nil
	file_diagnostics_diagnostics_proto_goTypes = nil
	file_diagnostics_diagnostics_proto_depIdxs = nil
}
