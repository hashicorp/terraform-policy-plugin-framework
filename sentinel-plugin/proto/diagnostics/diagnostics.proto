// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

syntax = "proto3";

package diagnostics;

option go_package = "github.com/hashicorp/go-s2-plugin/sentinel-plugin/proto/diagnostics";

import "types/types.proto";
import "cty/cty.proto";

enum Severity {
  INVALID = 0;
  WARNING = 1;
  ERROR = 2;
}

// Diagnostic is a message that represents a diagnostic message that can be
// returned by the Sentinel server.
message Diagnostic {
  Severity severity = 1;
  string summary = 2;
  string detail = 3;

  Range subject = 4;
  Range context = 5;

  // only one result should be set, depending on the type of diagnostic
  oneof result {
    types.EvaluateResult evaluate_result = 6;
    types.FetchResult fetch_result = 7;
  }

  // a diagnostic can be associated with a specific attribute
  cty.Path attribute = 8;

  // if the server had access to the source code that generated the diagnostic,
  // it can provide a snippet of the code that caused the diagnostic.
  Snippet snippet = 9;

  // if the diagnostic is associated with an expression, the values for
  // variables in the expression can be provided.
  repeated ExpressionValue expression_values = 10;

  // if the diagnostic is associated with a function call, the function
  // information can be provided.
  FunctionCall function_call = 11;
}

message Range {
  string filename = 1;
  Position start = 2;
  Position end = 3;
}

message Position {
  int64 line = 1;
  int64 column = 2;
  int64 byte = 3;
}

message Snippet {
  message Context {
    string context = 1;
  }

  Context context = 1;
  string code = 2;
  int64 start_line = 3;
  int64 highlight_start_offset = 4;
  int64 highlight_end_offset = 5;
}

message ExpressionValue {
  cty.Path path = 1;
  cty.Value value = 2;
}

message FunctionCall {
  string absolute_name = 1;
  cty.Function function = 2;
}
